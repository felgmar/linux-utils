#!/bin/sh

#
# Created by Ken Hoo (mrkenhoo)
# Android debloater tool
# android-debloater file
# for Android 8.0 Oreo or higher
#

main_dir="${main_dir}/"
packages_file="${HOME}/.config/android-debloater/pkglist"
packages_dir="`dirname ${packages_file}`"

create_main_directory()
{
if [ ! -d "${packages_dir}" ]
then
    printf "\n:: Creating directory ${packages_dir}..."
    mkdir "${packages_dir}"
    [ $? = "0" ] && echo " done" || echo " failed" && exit 1
fi
}

check_packages()
{
    [ ! -d "${main_dir}" ] && mkdir "${main_dir}"
    if [ -f ${packages_file} ]
    then
        . "${packages_file}"
        echo ":: Available packages:"
        for p in "${pkgs[@]}"
        do
            echo "${p}"
        done
    else
        if [ -z "${pkgs}" ]
        then
            echo ":: Error checking for packages. Cannot find the file ${packages_file}"
            get_packages
        fi
    fi
}

uninstall_packages()
{
    . ${packages_file} && \
        android_user=`adb shell cmd activity get-current-user`
    for p in "${pkgs[@]}"
    do
        printf "Removing package: ${p}... "
        adb shell pm uninstall --user "${android_user}" "${p}" > /dev/null 2>&1
        [ $? = "0" ] && echo "done" || echo "failed"
    done
}

reinstall_packages()
{
    . ${packages_file} && \
        android_user=`adb shell cmd activity get-current-user`
    for p in "${pkgs[@]}"
    do
        printf "Reinstalling package: ${p}... "
        adb shell cmd package install-existing --user "${android_user}" "${p}"
        [ $? = "0" ] && echo "done" || echo "failed"
    done
}

get_packages()
{
    read -p "  ==> Do you want to download it? <y/n> " input
    case "${input}" in
        Y|y|Yes|yes)
            if [ -x "`command -v curl`" ]; then
                `which curl` -fsSL "https://raw.githubusercontent.com/mrkenhoo/linux-utils/main/conf/android-debloater/pkgs.conf" -o "${packages_file}"
            elif [ -x "`command -v wget`" ]; then
                `which wget` -q "https://raw.githubusercontent.com/mrkenhoo/linux-utils/main/conf/android-debloater/pkgs.conf" -O "${packages_file}"
            else
                echo ":: ERROR: Could not download file: curl or wget was not found" && exit 1
            fi
        ;;
    esac
    . "${packages_file}"
    check_packages
}

check_dependencies()
{
    for deps in adb wget curl
    do
        [ ! -x `which ${deps}` ] && \
        echo ":: ERROR: ${deps}: command not found" && [ $? = "1" ] && exit 1
    done
}

help()
{
    printf "Android Debloater\n\nUsage: ${0} [--help|-h] [--start|-s] [--check-packages|-c]

--start,-s            Begins debloating of Android devices
--check-packages,-c   Checks which packages are available for debloating
--verbose,-v          Shows more messages
--help,-h             Prints this help\n"
}

[ "`whoami`" = "root" ] && echo "Do not execute this script as root" && exit 0

[ -z "${1}" ] && help

while [ $# -gt 0 ]; do
    case "${1}" in
        --start|-s)                 check_dependencies && create_main_directory && uninstall_packages;;
        --reinstall-packages|-r)    create_main_directory && reinstall_packages;;
        --check-packages|-c)        create_main_directory && check_packages;;
        --verbose|-v)               set -v;;
        --help|-h)                  help;;
        *)                          help;;
    esac
    shift
done

