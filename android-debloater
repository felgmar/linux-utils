#!/bin/sh

#
# Created by Ken Hoo (mrkenhoo)
# Android debloater tool
#

main_dir="${HOME}/.config/${0}/"
[ -z "${device_codename}" ] && read -p "Type your device's codename: " device_codename
android_user="`adb shell cmd activity get-current-user`"
packages_file="${HOME}/.config/android-debloater/${device_codename}_pkglist"
packages_dir="`dirname ${packages_file}`"

create_directories()
{
    if [ ! -d "${main_dir}" ]
    then
        echo ":: Creating directory ${main_dir}..."
        mkdir -v "${main_dir}"
    fi
    if [ ! -d "${packages_dir}" ]
    then
        echo ":: Creating directory ${packages_dir}..."
        mkdir -v "${packages_dir}"
    fi
    return $?
}

get_packages()
{
    echo ":: ERROR: ${packages_file}: file not found"
    echo ":: ERROR: could not show any packages"
    read -p "  ==> Do you want to download it? [Y/N]:  " input
    case "${input}" in
        Y|y|Yes|yes)
            if [ -x "`command -v curl`" ]
            then
                `which curl` -fsSL "https://raw.githubusercontent.com/mrkenhoo/linux-utils/main/conf/android-debloater/${device_codename}_pkglist" -o "${packages_file}"
            else
                echo ":: ERROR: Could not download file: curl was not found" && exit 1
            fi
        ;;
    esac

    return $?
}

load_packages()
{
    if [ -f "${packages_file}" ]
    then
        . "${packages_file}"
    else
	    get_packages
    fi
}

show_packages()
{
    load_packages
    echo ":: Available packages for the device ${device_codename}:"
    for p in "${pkgs[@]}"
    do
        echo "${p}"
    done

    return $?
}

uninstall_packages()
{
    load_packages
    for p in "${pkgs[@]}"
    do
        echo ":: Removing package: ${p} for the user ${android_user}..."
        adb shell pm uninstall --user "${android_user}" "${p}"; echo ""
    done

    return $?
}

reinstall_packages()
{
    load_packages
    for p in "${pkgs[@]}"
    do
        echo ":: Reinstalling package: ${p} for the user ${android_user}... "
        adb shell cmd package install-existing --user "${android_user}" "${p}"; echo ""
    done

    return $?
}

check_dependencies()
{
    for deps in adb wget curl
    do
        [ ! -x `command -v ${deps}` ] && \
            echo ":: ERROR: ${deps}: command not found" && exit 1
    done

    return $?
}

help()
{
    echo "Usage: ${0} [OPTIONS]

Options:
  --uninstall-packages,-u   Uninstall bloatware from the device codenamed ${device_codename}
  --reinstall-packages,-r   Reinstall bloatware from the device codenamed ${device_codename}
  --show-packages,-c        Show packages available for debloating
  --help,-h                 Prints this help"
}

[ "`whoami`" = "root" ] && \
    echo "Do not execute this script as root" && \
    exit 1

[ -z "${1}" ] && help

while [ $# -gt 0 ]
do
    case "${1}" in
        --uninstall-packages|-u)   check_dependencies; create_directories; load_packages; uninstall_packages;;
        --reinstall-packages|-r)   check_dependencies; create_directories; load_packages; reinstall_packages;;
        --show-packages|-c)        check_dependencies; create_directories; load_packages; show_packages;;
        --help|-h)                 help;;
        *)                         help;;
    esac
    shift
done

