#!/bin/sh

while getopts 'b:k:ch' arg
do
    case "$arg" in
        'b') kbranch="$OPTARG";;
        'k') kver="$OPTARG";;
        'c') cleanup_after_build=true;;
        'h') echo "Usage: $(basename $0) [-b KERNEL_BRANCH] [-k KERNEL_VERSION] [-c] {-h}"; exit 1;;
        ?) echo "Type '$(basename $0) -h' for a list of available options."; exit 1;;
    esac
done

if test -z "${kbranch}"
then
    echo "error: kernel branch not specified"
    exit 1
fi

if test -z "${kversion}"
then
    echo "Error: kernel version not specified"
    exit 1
fi

if test "$(whoami)" != "root"
then
    echo "You must execute this script as root"
    exit 1
fi

if test ! "$(command -v apt)"
then
    echo "error: apt: could not find such package manager"
fi

if test ! -d "linux-${kernelbranch}.${kernelver}"
then
    echo "Downloading file linux-${kernelbranch}.${kernelver}.tar.xz..."
    curl -fSLO "https://cdn.kernel.org/pub/linux/kernel/v${kernelbranch}.x/linux-${kernelbranch}.${kernelver}.tar.xz"
    echo "Extracting linux-${kernelbranch}.${kernelver}.tar.xz..."
    tar xf "linux-${kernelbranch}.${kernelver}.tar.xz"
fi

cd "linux-${kernelbranch}.${kernelver}"

apt install -y build-essential flex bison libssl-dev libelf-dev debhelper-compat

make ARCH=$(uname -m) defconfig && LOCALVERSION=-custom nice make -j $(nproc --all) bindeb-pkg

if test $cleanup_after_build == "true"
then
    apt purge --autoremove build-essential dpkg-dev flex bison libssl-dev libelf-dev debhelper-compat
fi
