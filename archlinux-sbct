#!/bin/bash

#
# Created by Liam Powell (gfelipe099)
# archlinux-sbct file
# A tool to enable Secure Boot on Arch Linux systems
# For Arch Linux amd64
#

#
# check if running as root
#
if [ "$(whoami)" != "root" ]; then
    echo "This script must be executed as root."
    exit 0
fi

# Verify Arch Linux is running
if [ ! -x /usr/bin/pacman ]; then
    echo "Pacman Package Manager was not found in this system, execution aborted."
    exit 1
    else
        pacman -S lsb-release --noconfirm --needed > /dev/null 2>&1
        os=$(lsb_release -ds | sed 's/"//g')
fi

if [ "${os}" != "Arch Linux" ]; then
    echo "You must be using Arch Linux to execute this script."
    exit 1
fi

welcome() {
    clear
    pacman -S figlet --noconfirm --needed > /dev/null 2>&1
    figlet -c "Arch Linux"
    figlet -c "SBCT"
    pacman -Rncsd figlet --noconfirm > /dev/null 2>&1
    printf "\n\nWelcome to Arch Linux SBCT!\nKernel version: `uname -r`\n"
}

root() {
    dependencies="preloader-signed"
    if [ -z `pacman -Qqe | grep ${dependencies}` ]; then
        echo "\n:: Installing package: '${dependencies}'..."
        pacman -S "${dependencies}" --noconfirm --needed > /dev/null 2>&1 || echo "Error installing package ${dependencies}"
    fi
    printf "\n:: Copying file HashTool.efi to /boot/EFI/BOOT/..." && \
    cp /usr/share/preloader-signed/HashTool.efi /boot/EFI/BOOT/ && echo " done" && \
    printf "\n:: Copying file systemd-bootx64.efi to /EFI/BOOT/loader.efi..." && \
    cp /boot/EFI/systemd/systemd-bootx64.efi /boot/EFI/BOOT/loader.efi && echo " done" && \
    printf "\n:: Copying file PreLoader.efi to /boot/EFI/BOOT/BOOTx64.efi..." && \
    cp /usr/share/preloader-signed/PreLoader.efi /boot/EFI/BOOT/BOOTx64.efi && echo " done" || echo "Error"
}
# Initialize script functions in this order
welcome
root
