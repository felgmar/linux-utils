#!/usr/bin/sh

#
# A git helper script
# Made by Ken Hoo (mrkenhoo)
# gmk file
#

set -e

help() {
    echo "Usage: ${0} [OPTIONS]

Available options are:
    --create-ssh-key        Creates an SSH key for GitHub private repositories authentication
    --status,-S             Shows the current status of the repository
    --commit,-C             Adds all the new modified files on the repository and then commits the changes
    --pull,-P               Fetches the latest changes from the repository
    --clone-repository,-c   Clones the specified repository (on private repositories it requires a verified SSH-key)
      --branch,-b           Sets the branch to clone from the repository
    --push,-p               Pushes the latest local commit to the repository
    --add,-A                Adds specified file(s) to be commited
    --add-tag,-a            Adds a label to the commit
      --label-name          Sets the label name for the tag
      --label-message       Sets the label message for the tag
    --delete-tag,-d         Deletes a label from the commit
    --show-tags,-s          Shows tags from current repository (if any)
    --help,-h               Shows this help message"
    return $?
}

[ -z "${1}" ] && help && exit $?

while [ $# -eq 1 ]
do
    case "${1}" in
        --create-ssh-key)
            if [ -z "${email}" ]
            then
                read -p "Type in your email address: " email
                ssh-keygen -t ed25519 -C "${email}"
            else
                ssh-keygen -t ed25519 -C "${email}"
            fi
            printf "\nHere's your public SSH key:\n$(cat "$HOME/.ssh/id_ed25519.pub")\n"
            exit $?
        ;;

        --create-gpg-key)
            gpg --full-generate-key
            for k in `gpg --list-secret-keys --keyid-format=long | grep sec | cut -d " " -f 4 | sed "s,.*/,,g"`
            do
                echo "Here's your GPG public key:"
                gpg --armor --export $k && printf "\n\n"
            done

            echo "Use any of these commands to acknowledge git about your primary GPG key:"
            for sk in `gpg --list-secret-keys --keyid-format=long | grep sec | cut -d " " -f 4 | sed "s,.*/,,g"`
            do
                echo git config --global user.signingkey $sk --replace-all
            done
            exit $?
        ;;

        --delete-ssh-key)
            if [ -f "$HOME/.ssh/id_ed25519" ]
            then
                rm -v "$HOME/.ssh/id_ed25519*"
            else
                echo "ERROR: There is nothing to delete"
            fi
            exit $?
        ;;

        --status|-S)
            git status `pwd`
            exit $?
        ;;

        --commit|-C)
            shift
            [ -z "${1}" ] && echo "No commit message provided" && exit $?
            git add .
            git commit -S -m "${1}"
            git push
            exit $?
        ;;

        --clone-repository|-c)
            shift
            repository="${1}"
            shift
            while [ $# -eq 1 ]; do
                case "${1}" in
                    --branch|-b)
                        shift
                        export branch="${1}"
                    ;;

                    *)
                        help
                    ;;
                esac
                shift
            done
            if [ -z "${username}" || -z "${branch}" ]
            then
                echo "Please specify a username and a branch and try again"
                exit 1
            else
                git clone git@github.com:${username}/"${repository}" -b "${branch}"
            fi
            exit $?
        ;;

        --pull|-P)
            git pull
            exit $?
        ;;

        --push|-p)
            git push --tags
            exit $?
        ;;

        --add|-A)
            shift
            git add .
            exit $?
        ;;

        --add-tag|-a)
            shift
            while [ $# -eq 1 ]
            do
                case "${1}" in
                    --label-name|-l)
                        shift
                        export label_name="${1}"
                    ;;

                    --label-message|-L)
                        shift
                        export label_message="${1}"
                    ;;

                    --help|-h)
                        help
                    ;;

                    *)
                        help
                    ;;
                esac
                shift
            done
            if [ -z "${label_name}" || -z "${label_message}" ]
            then
                echo "No label name or message was provided"
                exit 1
            else
                git tag -a "${label_name}" -m "${label_message}"
            fi
            exit $?
        ;;

        --delete-tag|-d)
            shift
            [ ! -z "${label_name}" ] && git tag -d "${label_name}"
            echo "No label name was provided"
            exit $?
        ;;

        --show-tags|-s)
            git tag
            exit $?
        ;;

        --username)
            shift $?
            export username="${1}"
        ;;

        *)
            shift
            [ ! -z "${1}" ] && echo "ERROR: ${1}: Invalid or unknown command" || \
                echo "ERROR: No command provided"
        ;;
    esac
    shift > /dev/null 2>&1
done
