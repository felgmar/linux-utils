#!/bin/sh

if [ $(whoami) != root ]; then
    echo "This script must be executed as root"
    exit
fi

pkgs="shim-signed grub-efi-amd64-signed"
bootDir="/boot/efi"
distro=$(lsb_release -i -s 2> /dev/null || echo Debian)

if [ -z ${1} ]; then
    echo "This script needs an argument to work. Available arguments are: secureboot, removable, all"
    exit
fi

echo "Please wait, reinstalling packages..."
apt-get purge -yy ${pkgs} --autoremove >/dev/null && apt-get install -yy ${pkgs} --autoremove >/dev/null

if [ ${1} = "secureboot" ]; then
    echo "Reinstalling GRUB with UEFI Secure Boot support..."
    grub-install --uefi-secure-boot --efi-directory=${bootDir} --bootloader-id=${distro}
    update-grub >/dev/null
    echo "Now you need to reboot the system, and enable Secure Boot (and/or install default keys)" && echo ""
    read -p "Reboot now? [yes/no]: " input
    if [ -z ${input} ]; then
        exit
    elif [ ${input} = "no" ]; then
        exit
    elif [ ${input} = "yes" ]; then
        reboot
    fi
elif [ ${1} = "removable" ]; then
    echo "Reinstalling GRUB with portable support..."
    grub-install --removable --esp-directory=${bootDir} --bootloader-id=${distro}
    update-grub >/dev/null
    read -p "Reboot now? [yes/no]: " input
    if [ -z ${input} ]; then
        exit
    elif [ ${input} = "no" ]; then
        exit
    elif [ ${input} = "yes" ]; then
        reboot
    fi
elif [ ${1} = "all" ]; then
    echo "Reinstalling GRUB with portable support..."
    grub-install --removable --uefi-secure-boot --esp-directory=${bootDir} --bootloader-id=${distro}
    update-grub >/dev/null
    echo "Now you need to reboot the system, and enable Secure Boot (and/or install default keys)" && echo ""
    read -p "Reboot now? [yes/no]: " input
    if [ -z ${input} ]; then
        exit
    elif [ ${input} = "no" ]; then
        exit
    elif [ ${input} = "yes" ]; then
        reboot
    fi
    else
        echo "Invalid parameter on ${1}. Try again with 'secureboot', 'removable' or 'all' instead."
fi
