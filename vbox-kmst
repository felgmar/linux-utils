#!/bin/sh

#
# VirtualBox KMST (kernel module signing tool)
# Created by Ken Hoo (mrkenhoo)
# vbox-kmst file
#

# set config dir
configDir="${HOME}/.config/vbox-kmst"

if test `whoami` != "root"
then
    echo "Run this script as root" && exit 1
fi

if test ! -d "$configDir"
then
    mkdir -pv ${configDir}
fi

if test -z ${1}
then
    echo "Specify an argument: import-key or sign-kernel-modules" && exit 1
fi

case "$1" in
    --import-key|-i)
        if test ! -f "${configDir}/vbox.priv"
        then
            echo "The private key do not exist, creating it..."
            openssl req -new \
                        -x509 \
                        -newkey rsa:2048 \
                        -keyout "${configDir}/vbox.priv" \
                        -outform DER \
                        -out "${configDir}/vbox.der" \
                        -nodes \
                        -days 36500 \
                        -subj "/CN=VirtualBox Secure Boot Key/"
            chmod 600 "${configDir}/vbox.priv"
            echo "Please specify a password to import the key below:"
            mokutil --import "${configDir}/vbox.der"
        else
            echo "Please specify a password to import the key below:"
            mokutil --import "${configDir}/vbox.der"
        fi
    ;;
    --sign-vbox-kernel-modules|-s)
       if test ! -f "${configDir}/vbox.priv"
       then
           echo "Error: No private key(s) were found\nRun '--import-key' first"
           return 1
       else
           for vboxkmodule in $(dirname $(modinfo -n vboxdrv))/*.ko; do
               echo "Signing kernel module ${vboxkmodule}..."
               /usr/src/linux-headers-$(uname -r)/scripts/sign-file sha256 ${configDir}vbox.priv ${configDir}vbox.der "${vboxkmodule}" > /dev/null 2>&1
            done
        fi
    ;;
    *)
        echo "Invalid argument: $1" && exit 1
    ;;
    esac

